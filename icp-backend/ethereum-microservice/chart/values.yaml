replicaCount: 1
readinessProbe:
  path: /healthz
  port: 3008
  initialDelaySeconds: 5
  timeoutSeconds: 1
  periodSeconds: 15

livenessProbe:
  path: /healthz
  port: 3008
  initialDelaySeconds: 5
  timeoutSeconds: 1 
  periodSeconds: 15
metadata:
 name: ethereumsvc 
 label: ethereumsvc

image:
  name: ethereumsvc
  imageName: "icpdevcluster.icp:8500/default/ethereum-microservice:latest" 
  imagePullPolicy: IfNotPresent
  ports:
    containerPort: 3008
  requests:
    cpu: "250m"
    memory: "64Mi"
  limit:
    cpu: "1"
    memory: "128Mi"
  maxSurge: 2
  maxUnavailable: 0

hpa:
  metadata:
    name: ethereum-microservice-HPA
  spec:
    maxReplicas: 10
    minReplicas: 2
  metrics:
    pods:
      targetAverageValue: 20
    resource:
      name: cpu
      targetAverageUtilization: 80 
    memory:
      targetAverageUtilization: 80 
  scaleTargetRef:  
    name: ethereumsvc
    
envOfSecrets:
  envSECRET:
    name: SECRET
    secretKeyRef:
      name: mysecret
      key: SECRET

ingress:
  metadeta:
    name: ethereumsvc
  path: /ethereumsvc
  serviceName: ethereumsvc
  servicePort: 3008

envOfConfigmaps:
  envHttpProvider:
    name: HttpProvider
    configMapKeyRef:
      name: env-database
      key: HttpProvider
  envCONTRACTADRESS:
    name: CONTRACTADRESS
    configMapKeyRef:
      name: env-database
      key: CONTRACTADRESS
  envETHEREUMACCOUNT:
    name: ETHEREUMACCOUNT
    configMapKeyRef:
      name: env-database
      key: ETHEREUMACCOUNT

service:
  serviceMetadata:
    name: ethereumsvc
    labels:
      app: ethereumsvc
  selector:
    selectorName: ethereumsvc
  servicePortConfiguration:
    protocol: TCP
    name: ethereumsvc
    type: NodePort
    port: 3008
    targetPort: 3008


serviceMonitor:
  metadata:
    name: serviceMonitorEthereumsvc
    labels:
      app: serviceMonitorEthereumsvc
  specs: 
    selector:
      matchLabels:
        app: serviceMonitorEthereumsvc
    port: ethereumsvc