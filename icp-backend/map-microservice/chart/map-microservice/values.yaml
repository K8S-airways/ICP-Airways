replicaCount: 2

metadata:
 name: mapsvc 
 label: mapsvc
readinessProbe:
  path: /healthz
  port: 30016
  initialDelaySeconds: 5
  timeoutSeconds: 1
  periodSeconds: 15

livenessProbe:
  path: /healthz
  port: 30016
  initialDelaySeconds: 5
  timeoutSeconds: 1 
  periodSeconds: 15

hpa:
  metadata:
    name: emailmicroservicehpa
  spec:
    maxReplicas: 10
    minReplicas: 1
  metrics:
    pods:
      targetAverageValue: 30
    resource:
      name: cpu
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 50
  scaleTargetRef:  
    name: mapsvc

image:
  name: mapsvc
  imageName: "mycluster.icp:8500/default/map-microservice:0.0.1" 
  imagePullPolicy: Always
  ports:
    containerPort: 30016
  requests:
    cpu: "60m"
    memory: "150Mi"
  limits:
    cpu: "80m"
    memory: "200Mi"
  maxSurge: 1
  maxUnavailable: 0
  lifecycle:
    preStop:
      command: ["/bin/bash", "-c", "sleep 20"]

envOfSecrets:
  envAPPID:
    name: APPID
    secretKeyRef:
      name: mysecret
      key: APPID
  envAPPCODE:
    name: APPCODE
    secretKeyRef:
      name: mysecret
      key: APPCODE


ingress:
  metadeta:
    name: mapsvc
  path: /mapsvc
  serviceName: mapsvc
  servicePort: 30016

service:
  serviceMetadata:
    name: mapsvc
    labels:
      app: mapsvc
  selector:
    selectorName: mapsvc
  servicePortConfiguration:
    protocol: TCP
    name: mapsvc
    type: ClusterIP
    port: 30016
    targetPort: 30016

serviceMonitor:
  metadata:
    name: serviceMonitormapsvc
    labels:
      app: serviceMonitormapsvc
  specs: 
    selector:
      matchLabels:
        app: serviceMonitormapsvc
    port: mapsvc